generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model File {
  FileId    Int      @id(map: "PK_FileId") @default(autoincrement())
  Name      String   @db.NVarChar(200)
  Extension String   @db.NVarChar(10)
  Content   Bytes
  NavId     Int
  CreatedOn DateTime @default(now(), map: "DF_File_CreatedOn") @db.DateTime
  Nav       Nav      @relation(fields: [NavId], references: [NavId], onDelete: Cascade, onUpdate: NoAction, map: "FK_FileNavId_Nav")
}

model Nav {
  NavId       Int      @id(map: "PK_NavId") @default(autoincrement())
  Name        String   @db.NVarChar(50)
  Url         String?  @db.NVarChar(500)
  ParentNavId Int?
  CreatedOn   DateTime @default(now(), map: "DF_Nav_CreatedOn") @db.DateTime
  File        File[]
  Link        Link[]
  Nav         Nav?     @relation("NavToNav", fields: [ParentNavId], references: [NavId], onDelete: NoAction, onUpdate: NoAction, map: "FK_ParentNavId_NavId")
  other_Nav   Nav[]    @relation("NavToNav")
}

model Link {
  LinkId     Int      @id(map: "PK_LinkId") @default(autoincrement())
  Url        String   @db.NVarChar(500)
  Title      String   @db.NVarChar(100)
  OpenNewTab Boolean  @default(false, map: "DF_Link_OpenNewTab")
  NavId      Int
  CreatedOn  DateTime @default(now(), map: "DF_Link_CreatedOn") @db.DateTime
  Nav        Nav      @relation(fields: [NavId], references: [NavId], onDelete: Cascade, onUpdate: NoAction, map: "FK_LinkNavId_Nav")
}

model Visit {
  VisitorId  Int      @id(map: "PK_VisitorId") @default(autoincrement())
  VisitCount BigInt   @default(0, map: "DF_Visit_VisitCount")
  CreatedOn  DateTime @default(now(), map: "DF_Visit_CreatedOn") @db.DateTime
  ModifiedOn DateTime @default(now(), map: "DF_Visit_ModifiedOn") @db.DateTime
}
